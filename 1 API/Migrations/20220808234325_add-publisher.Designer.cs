// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _1_API.Data;

#nullable disable

namespace _1_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220808234325_add-publisher")]
    partial class addpublisher
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_1_API.Data.Models.Books", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRead")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CoverUrl = "https...",
                            DateAdded = new DateTime(2022, 8, 10, 1, 43, 24, 172, DateTimeKind.Local).AddTicks(6104),
                            DateRead = new DateTime(2022, 8, 9, 1, 43, 24, 172, DateTimeKind.Local).AddTicks(6119),
                            Description = "firstdiscription",
                            Genre = "comedy",
                            IsRead = true,
                            PublisherId = 0,
                            Rate = 6,
                            Title = "firstbook"
                        },
                        new
                        {
                            ID = 2,
                            CoverUrl = "https...",
                            DateAdded = new DateTime(2022, 8, 10, 1, 43, 24, 172, DateTimeKind.Local).AddTicks(6125),
                            DateRead = new DateTime(2022, 8, 9, 1, 43, 24, 172, DateTimeKind.Local).AddTicks(6126),
                            Description = "firstdiscription",
                            Genre = "comedy",
                            IsRead = true,
                            PublisherId = 0,
                            Rate = 6,
                            Title = "secondbook"
                        },
                        new
                        {
                            ID = 3,
                            CoverUrl = "https...",
                            DateAdded = new DateTime(2022, 8, 10, 1, 43, 24, 172, DateTimeKind.Local).AddTicks(6130),
                            DateRead = new DateTime(2022, 8, 9, 1, 43, 24, 172, DateTimeKind.Local).AddTicks(6131),
                            Description = "Thirdiscription",
                            Genre = "action",
                            IsRead = true,
                            PublisherId = 0,
                            Rate = 4,
                            Title = "Thirdbook"
                        });
                });

            modelBuilder.Entity("_1_API.Data.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("_1_API.Data.Models.Books", b =>
                {
                    b.HasOne("_1_API.Data.Models.Publisher", "publisher")
                        .WithMany("books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("publisher");
                });

            modelBuilder.Entity("_1_API.Data.Models.Publisher", b =>
                {
                    b.Navigation("books");
                });
#pragma warning restore 612, 618
        }
    }
}
